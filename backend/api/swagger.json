{
  "openapi": "3.0.0",
  "info": {
    "title": "FeedTrack API",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://feedtrack-backend.vercel.app",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "description": "Get a list of all users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching users"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new user",
        "description": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all users",
        "description": "Delete all users from the system",
        "responses": {
          "204": {
            "description": "Users deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting users"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/feedbacks": {
      "get": {
        "summary": "Get all feedbacks",
        "description": "Get a list of all feedbacks",
        "responses": {
          "200": {
            "description": "A list of feedbacks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Feedback"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching feedbacks"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new feedback",
        "description": "Create a new feedback",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feedback"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating feedback"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all feedbacks",
        "description": "Delete all feedbacks from the system",
        "responses": {
          "204": {
            "description": "Feedbacks deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting feedbacks"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/branches": {
      "get": {
        "summary": "Get all branches",
        "description": "Get a list of all branches",
        "responses": {
          "200": {
            "description": "A list of branches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching branches"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new branch",
        "description": "Create a new branch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Branch created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating branch"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all branches",
        "description": "Delete all branches from the system",
        "responses": {
          "204": {
            "description": "Branches deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting branches"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tellers": {
      "get": {
        "summary": "Get all tellers",
        "description": "Get a list of all tellers",
        "responses": {
          "200": {
            "description": "A list of tellers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Teller"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching tellers"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new teller",
        "description": "Create a new teller",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Teller"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Teller created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teller"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating teller"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all tellers",
        "description": "Delete all tellers from the system",
        "responses": {
          "204": {
            "description": "Tellers deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting tellers"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dummy": {
      "get": {
        "summary": "Get all dummy data",
        "description": "Get a list of all dummy data",
        "responses": {
          "200": {
            "description": "A list of dummy data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dummy"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching dummy data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new dummy data",
        "description": "Create new dummy data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dummy"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dummy data created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dummy"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating dummy data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all dummy data",
        "description": "Delete all dummy data from the system",
        "responses": {
          "204": {
            "description": "Dummy data deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting dummy data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/questions": {
      "get": {
        "summary": "Get all questions",
        "description": "Get a list of all questions",
        "responses": {
          "200": {
            "description": "A list of questions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching questions"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new question",
        "description": "Create a new question",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Question created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating question"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all questions",
        "description": "Delete all questions from the system",
        "responses": {
          "204": {
            "description": "Questions deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting questions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/campaigns": {
      "get": {
        "summary": "Get all campaigns",
        "description": "Get a list of all campaigns",
        "responses": {
          "200": {
            "description": "A list of campaigns",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campaign"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching campaigns"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new campaign",
        "description": "Create a new campaign",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campaign created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating campaign"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all campaigns",
        "description": "Delete all campaigns from the system",
        "responses": {
          "204": {
            "description": "Campaigns deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting campaigns"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/campaignQuestions": {
      "get": {
        "summary": "Get all campaign questions",
        "description": "Get a list of all campaign questions",
        "responses": {
          "200": {
            "description": "A list of campaign questions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignQuestion"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching campaign questions"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new campaign question",
        "description": "Create a new campaign question",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignQuestion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campaign question created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignQuestion"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating campaign question"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all campaign questions",
        "description": "Delete all campaign questions from the system",
        "responses": {
          "204": {
            "description": "Campaign questions deleted successfully"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting campaign questions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tables": {
      "get": {
        "summary": "Get data from multiple tables",
        "description": "Get data from multiple tables and display in HTML",
        "responses": {
          "200": {
            "description": "HTML representation of table data",
            "content": {
              "text/html": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching table data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/getMaxUserId": {
      "get": {
        "summary": "Get maximum user ID",
        "description": "Get the maximum user ID from the database",
        "responses": {
          "200": {
            "description": "Maximum user ID",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "maxId": {
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching max user ID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/{tableName}": {
      "get": {
        "summary": "Get all items from a table",
        "description": "Get all items from a specific table by table name",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of items from the table",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenericItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching items from the table"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an item to a table",
        "description": "Add an item to a specific table by table name",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericItem"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error adding item to the table"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/{tableName}/{id}": {
      "get": {
        "summary": "Get an item by ID from a table",
        "description": "Get an item by ID from a specific table by table name",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the item",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An item from the table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericItem"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found in the table"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching item from the table"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an item in a table",
        "description": "Update an item in a specific table by table name and item ID",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the item",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericItem"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found in the table"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating item in the table"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from a table",
        "description": "Delete an item from a specific table by table name and item ID",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the item",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted successfully"
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found in the table"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting item from the table"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/campaign/view/{id}": {
      "get": {
        "summary": "Get test by ID",
        "description": "Get test data by ID from the 'test' table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the test",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test data for the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenericItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching test data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/campaign/{location}": {
      "get": {
        "summary": "Get campaign by location",
        "description": "Get campaign ID by location from the 'Branch' table",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Location of the branch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign ID for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching campaign ID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/branches/areas": {
      "get": {
        "summary": "Get unique areas from branches",
        "description": "Get unique areas from the 'Branch' table",
        "responses": {
          "200": {
            "description": "List of unique areas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/branches/{area}": {
      "get": {
        "summary": "Get branches by area",
        "description": "Get branches by area from the 'Branch' table",
        "parameters": [
          {
            "name": "area",
            "in": "path",
            "description": "Area of the branch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branches in the specified area",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenericItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/campaigns/{campaignID}/questionsPerPage": {
      "get": {
        "summary": "Get questions per page for a campaign",
        "description": "Get the number of questions per page for a specific campaign",
        "parameters": [
          {
            "name": "campaignID",
            "in": "path",
            "description": "ID of the campaign",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Questions per page for the specified campaign",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "questionsPerPage": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Campaign not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/campaigns/{campaignID}/campaignQuestions": {
      "get": {
        "summary": "Get all questions for a campaign",
        "description": "Get all questions for a specific campaign",
        "parameters": [
          {
            "name": "campaignID",
            "in": "path",
            "description": "ID of the campaign",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of questions for the specified campaign",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenericItem"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign questions not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Campaign questions not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          }
        }
      },
      "Feedback": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "This is a feedback message."
          }
        }
      },
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Branch 1"
          }
        }
      },
      "Teller": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Teller 1"
          }
        }
      },
      "Dummy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "data": {
            "type": "string",
            "example": "Some dummy data"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "text": {
            "type": "string",
            "example": "What is your favorite color?"
          }
        }
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Campaign 1"
          },
          "description": {
            "type": "string",
            "example": "Description of Campaign 1"
          }
        }
      },
      "CampaignQuestion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "campaignId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "questionId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      }
    }
  }
}

